{"version":3,"sources":["components/classes.js","components/Scorecard.js","components/Predictions.js","components/Snackbars.js","components/DropzoneIcon.js","components/DropImageCard.js","components/Classifier.js","components/Home.js","components/Report.js","components/Contact.js","components/App.js","serviceWorker.js","index.js","components/utils.js","dogs-resnet18.onnx"],"names":["useStyles","makeStyles","card","width","height","item","paddingTop","Scorecard","items","classes","Card","className","List","dense","map","avatar","name","percentage","id","ListItem","key","ListItemAvatar","Avatar","alt","src","ListItemText","primary","ListItemSecondaryAction","Typography","getTopK","acts","k","topK","Array","from","act","i","sort","a","b","reverse","slice","denominator","y","Math","exp","reduce","_","breed","prob","Predictions","output","getBreed","toFixed","getBreedImg","theme","box","padding","margin","content","boxSizing","info","backgroundColor","palette","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","InfoSnackbar","Box","SnackbarContent","clsx","LoadingSnackbar","CircularProgress","size","color","fileLoaded","isDragActive","position","justifyContent","marginBottom","canvas","zIndex","input","DropImageCard","setFile","canvasRef","onDrop","useCallback","acceptedFiles","length","console","log","file","type","startsWith","useDropzone","getRootProps","getInputProps","ref","DropzoneIcon","session","makeSession","root","flexGrow","Classifier","useState","loaded","setLoaded","isLoading","setIsLoading","startLoadModel","loadModel","useRef","data","setData","useEffect","fetchImage","outputMap","setOutputMap","runModel","outputData","values","next","value","Grid","container","Button","variant","onClick","marginTop","menuButton","heading","typography","pxToRem","fontWeight","fontWeightRegular","table","footer","button","Home","Container","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Report","slidesLink","slideDuration","showControls","loop","href","Contact","title","App","path","render","history","AppBar","Toolbar","Tabs","location","pathname","Tab","label","component","Link","to","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","split","p","charAt","toUpperCase","join","toLowerCase","InferenceSession","backendHint","warmupModel","dims","warmupTensor","Tensor","Float32Array","random","run","resnet","preprocess","inputTensor","setTimeout","_runModel","dataTensor","ndarray","dataProcessedTensor","ops","assign","pick","divseq","subseq","wait","ms","Promise","res","rej","global","imgConfig","maxWidth","maxHeight","cover","crop","crossOrigin","orientation","getImage","url","loadImage","img","current","Error","ctx","getContext","drawImage","getImageData","module","exports"],"mappings":"qQAAe,GACX,eACA,sBACA,WACA,iCACA,cACA,qBACA,qBACA,uBACA,mBACA,gBACA,iBACA,cACA,uBACA,oBACA,mBACA,WACA,2BACA,YACA,iBACA,WACA,mBACA,iBACA,mBACA,cACA,aACA,iBACA,kBACA,8BACA,gBACA,aACA,iBACA,6BACA,eACA,eACA,gBACA,sBACA,kBACA,oBACA,mBACA,qBACA,qBACA,mBACA,aACA,QACA,cACA,mBACA,eACA,kBACA,qBACA,kBACA,uBACA,WACA,WACA,aACA,sBACA,aACA,gBACA,SACA,UACA,iBACA,qBACA,mBACA,oBACA,WACA,iBACA,4BACA,iBACA,kBACA,kBACA,eACA,aACA,yBACA,8BACA,oBACA,gBACA,UACA,SACA,SACA,0BACA,aACA,WACA,SACA,QACA,SACA,eACA,QACA,OACA,UACA,iBACA,SACA,yBACA,QACA,QACA,wBACA,kBACA,mBACA,cACA,WACA,SACA,WACA,SACA,WACA,WACA,qBACA,mBACA,sBACA,aACA,WACA,MACA,UACA,aACA,gBACA,8BACA,kBACA,qBACA,aACA,cACA,SACA,UACA,2B,+DC7GEA,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,IACPC,OAAQ,KAEZC,KAAM,CACFC,WAAY,MAIL,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,MACzBC,EAAUT,IAChB,OAAO,kBAACU,EAAA,EAAD,CAAMC,UAAWF,EAAQP,MAAM,kBAACU,EAAA,EAAD,CAAMC,OAAK,GAC5CL,EAAMM,KAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACjBC,EAAE,UAAMF,EAAN,YAAcC,GACtB,OAAO,kBAACE,EAAA,EAAD,CAAUC,IAAKF,EAAIP,UAAWF,EAAQJ,MACzC,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,IAAG,mBAAcP,GACjBQ,IAAKT,KAGb,kBAACU,EAAA,EAAD,CAAcP,GAAIA,EAAIQ,QAASV,IAC/B,kBAACW,EAAA,EAAD,KACI,kB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","file":"static/js/main.8f74c41d.chunk.js","sourcesContent":["export default [\n    'Afghan_hound',\n    'African_hunting_dog',\n    'Airedale',\n    'American_Staffordshire_terrier',\n    'Appenzeller',\n    'Australian_terrier',\n    'Bedlington_terrier',\n    'Bernese_mountain_dog',\n    'Blenheim_spaniel',\n    'Border_collie',\n    'Border_terrier',\n    'Boston_bull',\n    'Bouvier_des_Flandres',\n    'Brabancon_griffon',\n    'Brittany_spaniel',\n    'Cardigan',\n    'Chesapeake_Bay_retriever',\n    'Chihuahua',\n    'Dandie_Dinmont',\n    'Doberman',\n    'English_foxhound',\n    'English_setter',\n    'English_springer',\n    'EntleBucher',\n    'Eskimo_dog',\n    'French_bulldog',\n    'German_shepherd',\n    'German_short-haired_pointer',\n    'Gordon_setter',\n    'Great_Dane',\n    'Great_Pyrenees',\n    'Greater_Swiss_Mountain_dog',\n    'Ibizan_hound',\n    'Irish_setter',\n    'Irish_terrier',\n    'Irish_water_spaniel',\n    'Irish_wolfhound',\n    'Italian_greyhound',\n    'Japanese_spaniel',\n    'Kerry_blue_terrier',\n    'Labrador_retriever',\n    'Lakeland_terrier',\n    'Leonberger',\n    'Lhasa',\n    'Maltese_dog',\n    'Mexican_hairless',\n    'Newfoundland',\n    'Norfolk_terrier',\n    'Norwegian_elkhound',\n    'Norwich_terrier',\n    'Old_English_sheepdog',\n    'Pekinese',\n    'Pembroke',\n    'Pomeranian',\n    'Rhodesian_ridgeback',\n    'Rottweiler',\n    'Saint_Bernard',\n    'Saluki',\n    'Samoyed',\n    'Scotch_terrier',\n    'Scottish_deerhound',\n    'Sealyham_terrier',\n    'Shetland_sheepdog',\n    'Shih-Tzu',\n    'Siberian_husky',\n    'Staffordshire_bullterrier',\n    'Sussex_spaniel',\n    'Tibetan_mastiff',\n    'Tibetan_terrier',\n    'Walker_hound',\n    'Weimaraner',\n    'Welsh_springer_spaniel',\n    'West_Highland_white_terrier',\n    'Yorkshire_terrier',\n    'affenpinscher',\n    'basenji',\n    'basset',\n    'beagle',\n    'black-and-tan_coonhound',\n    'bloodhound',\n    'bluetick',\n    'borzoi',\n    'boxer',\n    'briard',\n    'bull_mastiff',\n    'cairn',\n    'chow',\n    'clumber',\n    'cocker_spaniel',\n    'collie',\n    'curly-coated_retriever',\n    'dhole',\n    'dingo',\n    'flat-coated_retriever',\n    'giant_schnauzer',\n    'golden_retriever',\n    'groenendael',\n    'keeshond',\n    'kelpie',\n    'komondor',\n    'kuvasz',\n    'malamute',\n    'malinois',\n    'miniature_pinscher',\n    'miniature_poodle',\n    'miniature_schnauzer',\n    'otterhound',\n    'papillon',\n    'pug',\n    'redbone',\n    'schipperke',\n    'silky_terrier',\n    'soft-coated_wheaten_terrier',\n    'standard_poodle',\n    'standard_schnauzer',\n    'toy_poodle',\n    'toy_terrier',\n    'vizsla',\n    'whippet',\n    'wire-haired_fox_terrier',\n];","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    card: {\n        width: 299,\n        height: 299,\n    },\n    item: {\n        paddingTop: 10,\n    },\n});\n\nexport default function Scorecard({items}) {\n    const classes = useStyles();\n    return <Card className={classes.card}><List dense>\n        {items.map(({avatar, name, percentage}) => {\n            const id = `${name}-${percentage}`\n            return <ListItem key={id} className={classes.item}>\n                <ListItemAvatar>\n                    <Avatar\n                        alt={`image of ${name}`}\n                        src={avatar}\n                    />\n                </ListItemAvatar>\n                <ListItemText id={id} primary={name} />\n                <ListItemSecondaryAction>\n                    <Typography>{percentage}%</Typography>\n                </ListItemSecondaryAction>\n            </ListItem>\n        })}\n    </List></Card>;\n};","import React from 'react';\nimport classes from './classes'\nimport Scorecard from './Scorecard';\nimport {getBreedImg, getBreed} from './utils';\n\nconst getTopK = (acts, k) => {\n    const topK = Array.from(acts)\n        .map((act, i) => [act, i])\n        .sort((a, b) => {\n            if (a[0] < b[0]) return -1;\n            if (a[0] > b[0]) return 1;\n            return 0;\n        })\n        .reverse()\n        .slice(0, k)\n\n    // denominator of softmax function\n    const denominator = acts.map(y => Math.exp(y)).reduce((a,b) => a+b)\n    return topK.map(([act, i], _, acts) => ({\n        breed: classes[i],\n        act,\n        prob: Math.exp(act) / denominator,\n    }));\n}\n\nexport default function Predictions({output}) {\n    if (!output) return null;\n    const items = getTopK(output, 5).map(({breed, prob}) => ({\n        name: getBreed(breed),\n        percentage: (prob * 100).toFixed(2),\n        avatar: getBreedImg(breed),\n    }));\n    return <Scorecard items={items} />;\n}","import React from 'react';\nimport clsx from 'clsx';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        width: 299,\n        padding: 0,\n        margin: 0,\n    },\n    content: {\n        boxSizing: 'border-box',\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nexport function InfoSnackbar({message}) {\n    const classes = useStyles();\n    return <Box className={classes.box}>\n        <SnackbarContent className={clsx(classes.info, classes.content)} message={\n            <span className={classes.message}>\n                <InfoIcon className={clsx(classes.icon, classes.iconVariant)} />\n                {message}\n            </span>\n        } />\n    </Box>;\n}\n\nexport function LoadingSnackbar({message}) {\n    const classes = useStyles();\n    return <Box className={classes.box}>\n        <SnackbarContent className={classes.content} message={\n            <span className={classes.message}>\n                <CircularProgress size={20} className={classes.iconVariant} />\n                {message}\n            </span>\n        } />\n    </Box>;\n}","import React from 'react';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    icon: {\n        width: '50%',\n        height: '50%',\n        color: 'grey',\n    },\n});\n\nexport default ({fileLoaded, isDragActive}) => {\n    const classes = useStyles();\n    if (fileLoaded) { return null; }\n    if (isDragActive) { return <CheckCircleIcon className={classes.icon} />; }\n    return <CloudUploadIcon className={classes.icon} />;\n}","import React, {useCallback} from 'react';\nimport DropzoneIcon from './DropzoneIcon'\nimport {useDropzone} from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\nconst useStyles = makeStyles({\n    card: {\n        width: 299,\n        height: 299,\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 10,\n    },\n    canvas: {\n        width: 299,\n        height: 299,\n        zIndex: 0,\n        position: 'absolute',\n    },\n    input: {\n        zIndex: 9999,\n        position: 'absolute',\n    },\n});\n\nexport default function DropImageCard({setFile, canvasRef, fileLoaded}) {\n    const classes = useStyles();\n    const onDrop = useCallback(acceptedFiles => {\n        if (acceptedFiles.length > 1) {\n            return console.log('can only handle one file at a time');\n        }\n        if (acceptedFiles.length === 0) return;\n        const file = acceptedFiles[0]\n        if (!file.type.startsWith('image')) {\n            return console.log('file must be an image')\n        }\n        setFile(file)\n    }, [setFile])\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n    return <Card {...getRootProps()} className={classes.card}>\n        <canvas className={classes.canvas} ref={canvasRef} width={299} height={299} />\n        <input alt=\"Image Dropzone\" type=\"image\" className={classes.input} {...getInputProps()} />\n        <DropzoneIcon fileLoaded={fileLoaded} isDragActive={isDragActive} />\n    </Card>\n}","import React, {useRef, useEffect, useState} from 'react';\nimport Predictions from './Predictions';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {InfoSnackbar, LoadingSnackbar } from './Snackbars'\nimport DropImageCard from './DropImageCard'\nimport { fetchImage, makeSession, loadModel, runModel } from './utils'\nimport Button from '@material-ui/core/Button';\n\nconst session = makeSession();\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n  }));\n  \n\nexport default function Classifier() {\n    const [loaded, setLoaded] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const startLoadModel = async () => {\n        if (isLoading || loaded) { return; }\n        setIsLoading(true);\n        await loadModel(session);\n        setLoaded(true);\n        setIsLoading(false);\n    }\n    \n    const [file, setFile] = useState(null)    \n    const canvas = useRef(null)\n    const [data, setData] = useState(null)\n    useEffect(() => {\n        if (file) fetchImage(file, canvas, setData);\n    }, [file])\n\n    const [outputMap, setOutputMap] = useState(null);\n\n    useEffect(() => {\n        if (!loaded || !data) return;\n        runModel(session, data, setOutputMap);\n    }, [loaded, data]); // runs when loaded or data changes    \n    const outputData = outputMap && outputMap.values().next().value.data;\n    \n    const classes = useStyles();\n    return <div className={classes.root}>\n        <Grid container spacing={3}>\n            <Grid item>\n                <DropImageCard setFile={setFile} canvasRef={canvas} fileLoaded={!!file} />\n                { !loaded && !isLoading && <Button variant=\"contained\" onClick={startLoadModel}>Load model (48 MB)</Button>}\n                { !loaded && isLoading && <LoadingSnackbar message=\"Loading model...\" /> }\n                { loaded && data && !outputMap && <LoadingSnackbar message=\"Running model...\" /> }\n                { loaded && !file && <InfoSnackbar message=\"Upload a music clip file ...\" /> }\n                { !!file && !data && <LoadingSnackbar message=\"Loading music...\" /> }\n            </Grid>\n            <Grid item>\n                <Predictions output={outputData} />\n            </Grid>\n        </Grid>\n    </div>\n}","import React from 'react';\nimport Classifier from './Classifier'\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n// import Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n// import AppBar from '@material-ui/core/AppBar';\n// import Tabs from '@material-ui/core/Tabs';\n// import Tab from '@material-ui/core/Tab';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Avatar from '@material-ui/core/Avatar';\n// import credits from './credits';\nimport Button from '@material-ui/core/Button';\n// import breeds from './classes'\n// import {getBreed} from './utils'\n\n// import { Route, BrowserRouter, Switch, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        marginTop: 20,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    table: {\n        width: '100%',\n    },\n    footer: {\n        padding: theme.spacing(2),\n        marginTop: 'auto',\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction Home() {\n    const classes = useStyles();\n    return <>\n        <Container className={classes.content}>\n            <Classifier />\n        </Container>\n        <Container className={classes.content}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                >\n                <Typography className={classes.heading}>How do I use this?</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n\n                </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2a-content\"\n                id=\"panel2a-header\"\n                >\n                <Typography className={classes.heading}>What music tags does the classifier know?</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n \n                </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel3a-content\"\n                id=\"panel3a-header\"\n                >\n                <Typography className={classes.heading}>What is this good for?</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n\n                </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel3a-content\"\n                id=\"panel3a-header\"\n                >\n                <Typography className={classes.heading}>What happens to my data?</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n\n                </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel3a-content\"\n                id=\"panel3a-header\"\n                >\n                <Typography className={classes.heading}>Music Data credits</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            {/* <footer className={classes.footer}>\n                <Button className={classes.button}>Developed by Mengyan Wu, Yuxiao Liu, Zihui Liu</Button>\n            </footer> */}\n        </Container>\n  </>;\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactGoogleSlides from \"react-google-slides\";\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        marginBottom: 100,\n        marginTop: 100,\n    },\n}));\n\nfunction Report() {\n    const classes = useStyles();\n    return (\n        <> \n            <Container className = {classes.content}>\n                <ReactGoogleSlides\n                    width={\"100%\"}\n                    slidesLink=\"https://docs.google.com/presentation/d/1E7UU2hlorUFX68dGBQHP8KRNpKB5hXVNodulZvLooSA/edit#slide=id.g25f6af9dd6_0_0\"\n                    slideDuration={5}\n                    position={1}\n                    showControls\n                    loop\n                />\n            </Container>\n            <Container className={classes.content}> \n                <object data=\"http://africau.edu/images/default/sample.pdf\" type=\"application/pdf\" width=\"100%\" height=\"800\">\n                    <p>Alternative text - include a link <a href=\"http://africau.edu/images/default/sample.pdf\">to the PDF!</a></p>\n                </object>\n            </Container>\n        </>\n\n    )\n}\n\nexport default Report;\n","import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        marginBottom: 100,\n        marginTop: 100,\n    },\n}));\n\nfunction Contact() {\n    const classes = useStyles();\n    return (\n        <>\n            <Container className={classes.content}>\n                <Typography>\n                   Developed by Mengyan Wu, Yuxiao Liu, Zihui Liu \n                </Typography>\n            </Container>\n        </>\n    )\n}\n\nexport default Contact;\n","import React from 'react';\n// import Classifier from './Classifier'\n// import Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n// import Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n// import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Avatar from '@material-ui/core/Avatar';\n// import credits from './credits';\n// import Button from '@material-ui/core/Button';\n// import breeds from './classes'\n// import {getBreed} from './utils'\n\nimport { Route, BrowserRouter, Switch, Link } from \"react-router-dom\";\nimport Home from './Home';\nimport Report from './Report';\nimport Contact from './Contact';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <BrowserRouter>\n                <Route\n                    path=\"/\"\n                    render={(history) => (\n                        <AppBar>\n                            <Toolbar>\n                                <Typography variant=\"h6\" className={classes.title}>\n                                    Music Tagger\n                                </Typography>\n                            \n                            <Tabs value={history.location.pathname}>\n                                <Tab\n                                    value=\"/\"\n                                    label=\"Home\"\n                                    component={Link}\n                                    to=\"/\"\n                                />\n                                <Tab\n                                    value=\"/report\"\n                                    label=\"Report\"\n                                    component={Link}\n                                    to=\"/report\"\n                                />\n                                <Tab\n                                    value=\"/contact\"\n                                    label=\"Contact\"\n                                    component={Link}\n                                    to=\"/contact\"\n                                />\n                            </Tabs>\n                            </Toolbar>\n                        </AppBar>\n                    )}\n                />\n\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/report\" component={Report} />\n                    <Route path=\"/contact\" component={Contact} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import loadImage from 'blueimp-load-image';\nimport {Tensor, InferenceSession} from 'onnxjs';\nimport ndarray from 'ndarray';\nimport ops from 'ndarray-ops';\nimport resnet from '../dogs-resnet18.onnx';\n\nexport const getBreed = className => className.split('_').map(p => {\n    return p.charAt(0).toUpperCase() + p.slice(1)\n}).join(' ')\n\nexport const getBreedImg = className => {\n    const breed = className.split('_').map(p => {\n        return p.charAt(0).toLowerCase() + p.slice(1).toLowerCase()\n    }).join('_')\n    return `${process.env.PUBLIC_URL}/images/${breed}.jpg`\n}\n\nexport const makeSession = (() => {\n    let _session = null;\n    return () => {\n        if (_session !== null) { return _session; }\n        return new InferenceSession({backendHint: 'webgl'});\n    }\n})()\n\nasync function warmupModel (session) {\n    const dims = [1, 3, 299, 299];\n    const size = dims.reduce((a, b) => a * b);\n    const warmupTensor = new Tensor(new Float32Array(size), 'float32', dims);\n    for (let i = 0; i < size; i++) {\n        warmupTensor.data[i] = Math.random() * 2.0 - 1.0; // random value [-1.0, 1.0)\n    }\n    await session.run([warmupTensor]);\n}\n\nexport async function loadModel (session) {\n    await session.loadModel(resnet);\n    await warmupModel(session);\n}\n\nasync function _runModel (session, input, setOutputMap) {\n    const {width, height} = input;\n    const data = preprocess(input);\n    const inputTensor = new Tensor(data, 'float32', [1, 3, width, height]);\n    // await wait(0);\n    const outputMap = await session.run([inputTensor]);\n    setOutputMap(outputMap);\n}\n\nexport function runModel(session, input, setOutputMap) {\n    setTimeout(() => _runModel(session, input, setOutputMap), 10);\n}\n\n// borrowed from onnx.js example: https://github.com/microsoft/onnxjs/blob/4085b7e61804d093e36af6a456d8c14c329f0a0a/examples/browser/resnet50/index.js#L29\nconst preprocess = input => {\n    const {data, width, height} = input\n\n    // data processing\n    const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\n    const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [1, 3, width, height]);\n    ops.assign(dataProcessedTensor.pick(0, 0, null, null), dataTensor.pick(null, null, 0));\n    ops.assign(dataProcessedTensor.pick(0, 1, null, null), dataTensor.pick(null, null, 1));\n    ops.assign(dataProcessedTensor.pick(0, 2, null, null), dataTensor.pick(null, null, 2));\n    ops.divseq(dataProcessedTensor, 255);\n    ops.subseq(dataProcessedTensor.pick(0, 0, null, null), 0.485);\n    ops.subseq(dataProcessedTensor.pick(0, 1, null, null), 0.456);\n    ops.subseq(dataProcessedTensor.pick(0, 2, null, null), 0.406);\n    ops.divseq(dataProcessedTensor.pick(0, 0, null, null), 0.229);\n    ops.divseq(dataProcessedTensor.pick(0, 1, null, null), 0.224);\n    ops.divseq(dataProcessedTensor.pick(0, 2, null, null), 0.225);\n\n    return dataProcessedTensor.data;\n}\n\nconst wait = ms => new Promise((res, rej) => {\n    global.setTimeout(() => res(), ms)\n});\n\nconst imgConfig = {\n    maxWidth: 299,\n    maxHeight: 299,\n    cover: true,\n    crop: true,\n    canvas: true,\n    crossOrigin: 'Anonymous',\n    orientation: true,\n};\n  \nconst getImage = url => new Promise((res, rej) => {\n    loadImage(url, img => res(img), imgConfig)\n});\n\nexport const fetchImage = async (url, canvas, setData) => {\n    if (!canvas || !canvas.current) return;\n    const img = await getImage(url);\n    if (img.type === \"error\") throw new Error(\"could not load image\");\n    const ctx = canvas.current.getContext('2d');\n    ctx.drawImage(img, 0, 0);\n    await wait(1);\n    const data = ctx.getImageData(0, 0, canvas.current.width, canvas.current.height);\n    setData(data);\n};","module.exports = __webpack_public_path__ + \"static/media/dogs-resnet18.e15a2861.onnx\";"],"sourceRoot":""}